module Fake.Hello exposing (main)

{-| Fake gren package for testing.
-}

import FileSystem
import FileSystem.Path as Path
import Init
import Node
import Stream
import Task

main =
    Node.defineProgram
        { init = init
        , update = (\msg model -> { model = model, command = Cmd.none })
        , subscriptions = (\model -> Sub.none)
        }


init env =
    let
        print str =
            Stream.writeLineAsBytes str env.stdout
                |> Task.onError (\_ -> Task.succeed env.stdout)

        printError error =
            print (Debug.toString error)

        showCwd fsPerm =
            Path.fromPosixString "."
                |> FileSystem.realPath fsPerm
                |> Task.map Path.toPosixString
                |> Task.map (String.prepend "CWD: ")
                |> Task.andThen print
                |> Task.onError printError

        showApplicationPath =
            env.applicationPath
                |> Path.toPosixString
                |> String.prepend "Application path: "
                |> print
    in
    Init.await FileSystem.initialize <| \fsPerm ->
        Node.startProgram
            { model = {}
            , command =
                print "Hello from a gren package!"
                    |> Task.andThen (\_ -> showCwd fsPerm)
                    |> Task.andThen (\_ -> showApplicationPath)
                    |> Task.execute
            }
